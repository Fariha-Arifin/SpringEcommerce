<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"  
       xmlns:mvc="http://www.springframework.org/schema/mvc"  
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                              http://www.springframework.org/schema/beans/spring-beans.xsd
                              http://www.springframework.org/schema/context
                              http://www.springframework.org/schema/context/spring-context.xsd
                              http://www.springframework.org/schema/mvc
                              http://www.springframework.org/schema/mvc/spring-mvc.xsd
                              http://www.springframework.org/schema/tx
                              http://www.springframework.org/schema/tx/spring-tx.xsd
                              http://www.springframework.org/schema/security
                              http://www.springframework.org/schema/security/spring-security.xsd">
                              
        <context:component-scan base-package="com.music.store" />
        <mvc:annotation-driven/>
        
        <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
           <property name="prefix" value="/WEB-INF/view/" />
           <property name="suffix" value=".jsp" />
          
        </bean>
        
        <!-- Step 1: Define Database DataSource / connection pool -->
		<bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
	          destroy-method="close">
	        <property name="driverClass" value="com.mysql.cj.jdbc.Driver" />
	        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/music_directory?useSSL=false" />
	        <property name="user" value="musicproduct" />
	        <property name="password" value="musicproduct" /> 
	
	        <!-- these are connection pool properties for C3P0 -->
			<property name="initialPoolSize" value="5"/>
	        <property name="minPoolSize" value="5" />
	        <property name="maxPoolSize" value="20" />
	        <property name="maxIdleTime" value="30000" />
		</bean>  
		
	    <!-- Step 2: Setup Hibernate session factory -->
		<bean id="sessionFactory"
			class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
			<property name="dataSource" ref="myDataSource" />
			<property name="packagesToScan" value="com.music.store.model" />
			<property name="hibernateProperties">
			   <props>
			      <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
			      <prop key="hibernate.show_sql">true</prop>
			   </props>
			</property>
	   </bean>	  
	
	    <!-- Step 3: Setup Hibernate transaction manager -->
		<bean id="myTransactionManager"
	            class="org.springframework.orm.hibernate5.HibernateTransactionManager">
	        <property name="sessionFactory" ref="sessionFactory"/>
	    </bean>
	    
	   <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="2034000" />
      </bean>
	    
	    
	    <!-- Step 4: Enable configuration of transactional behavior based on annotations -->
		<tx:annotation-driven transaction-manager="myTransactionManager" />
		
        
         <security:http auto-config="true">
        <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_USER')" />
        <security:form-login
            login-page="/login"
            login-processing-url="/j_spring_security_check"
            default-target-url="/admin"
            authentication-failure-url="/login?error"
            username-parameter="username"
            password-parameter="password" />
        <security:logout
            logout-success-url="/login?logout" 
            />
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider>
            <security:jdbc-user-service data-source-ref="myDataSource"
                                        authorities-by-username-query="SELECT username, authority FROM authorities WHERE username = ?"
                                        users-by-username-query="SELECT username, password, enable FROM users WHERE username = ?" />
        </security:authentication-provider>
    </security:authentication-manager>
        
        
        
        <mvc:resources location="/WEB-INF/resources/" mapping="/resources/**"></mvc:resources>

</beans>












